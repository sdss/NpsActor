# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Test

on:
  push:
    branches: [main]
    paths-ignore:
      - 'docs/**'
  pull_request:
    branches: [main]
    paths-ignore:
      - 'docs/**'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8', '3.9', '3.10']

    steps:
      - uses: actions/checkout@v2

      - name: Cache Setup
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup node.js (for pyright)
        uses: actions/setup-node@v2
        with:
          node-version: '12'

      - name: Install poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 - --preview

      - name: Install dependencies
        run: |
          poetry env use system
          poetry pip install -U pip setuptools wheel
          poetry --no-ansi install --without helpers

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          poetry run pip install flake8
          poetry run flake8 . --count --show-source --statistics

      - name: Lint with black
        run: |
          poetry run pip install black
          poetry run black --check .

      - name: Lint with isort
        run: |
          poetry run pip install isort
          poetry run isort -c . -vvv

      - name: Test with pytest
        run: |
          poetry --no-ansi install --only test
          poetry run pytest

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3.1.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
